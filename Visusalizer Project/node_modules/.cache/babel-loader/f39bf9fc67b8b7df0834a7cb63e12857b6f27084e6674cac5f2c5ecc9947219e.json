{"ast":null,"code":"// Function to calculate edge length\nexport const calculateEdgeLength = edge => {\n  const dx = edge.from.x - edge.to.x;\n  const dy = edge.from.y - edge.to.y;\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\n// Function to calculate midpoiint of an edge\nexport const calculateMidpoint = edge => {\n  const midX = (edge.from.x + edge.to.x) / 2;\n  const midY = (edge.from.y + edge.to.y) / 2;\n  return {\n    x: midX,\n    y: midY\n  };\n};\n\n// Fucntion to calculate angle of an edge\nexport const calculateAngle = edge => {\n  const dx = edge.to.x - edge.from.x;\n  const dy = edge.to.y - edge.from.y;\n  let flipped = false;\n  let angle = Math.atan2(dy, dx) * (180 / Math.PI);\n  if (dx >= 0 && dy < 0) {} else if (dx < 0 && dy < 0) {\n    angle += 180;\n    flipped = true;\n  } else if (dx < 0 && dy >= 0) {\n    angle -= 180;\n    flipped = true;\n  } else if (dx >= 0 && dy >= 0) {}\n  return {\n    angle: angle,\n    flipped: flipped\n  };\n};","map":{"version":3,"names":["calculateEdgeLength","edge","dx","from","x","to","dy","y","Math","sqrt","calculateMidpoint","midX","midY","calculateAngle","flipped","angle","atan2","PI"],"sources":["/Users/tani/Desktop/visualizer/Visusalizer Project/src/Components/GraphUtilities.js"],"sourcesContent":["\n// Function to calculate edge length\nexport const calculateEdgeLength = (edge) => {\n    const dx = edge.from.x - edge.to.x;\n    const dy = edge.from.y - edge.to.y;\n    return Math.sqrt(dx * dx + dy * dy);\n};\n\n// Function to calculate midpoiint of an edge\nexport const calculateMidpoint = (edge) => {\n    const midX = (edge.from.x + edge.to.x) / 2;\n    const midY = (edge.from.y + edge.to.y) / 2;\n    return { x: midX, y: midY };\n};\n\n// Fucntion to calculate angle of an edge\nexport const calculateAngle = (edge) => {\n    const dx = edge.to.x - edge.from.x;\n    const dy = edge.to.y - edge.from.y;\n    let flipped = false;\n    let angle = Math.atan2(dy, dx) * (180 / Math.PI);\n\n    if (dx >= 0 && dy < 0) {\n    } else if (dx < 0 && dy < 0) {\n        angle += 180;\n        flipped = true;\n    } else if (dx < 0 && dy >= 0) {\n        angle -= 180;\n        flipped = true;\n    } else if (dx >= 0 && dy >= 0) {\n    }\n\n    return {\n        angle: angle,\n        flipped: flipped\n    };\n};\n"],"mappings":"AACA;AACA,OAAO,MAAMA,mBAAmB,GAAIC,IAAI,IAAK;EACzC,MAAMC,EAAE,GAAGD,IAAI,CAACE,IAAI,CAACC,CAAC,GAAGH,IAAI,CAACI,EAAE,CAACD,CAAC;EAClC,MAAME,EAAE,GAAGL,IAAI,CAACE,IAAI,CAACI,CAAC,GAAGN,IAAI,CAACI,EAAE,CAACE,CAAC;EAClC,OAAOC,IAAI,CAACC,IAAI,CAACP,EAAE,GAAGA,EAAE,GAAGI,EAAE,GAAGA,EAAE,CAAC;AACvC,CAAC;;AAED;AACA,OAAO,MAAMI,iBAAiB,GAAIT,IAAI,IAAK;EACvC,MAAMU,IAAI,GAAG,CAACV,IAAI,CAACE,IAAI,CAACC,CAAC,GAAGH,IAAI,CAACI,EAAE,CAACD,CAAC,IAAI,CAAC;EAC1C,MAAMQ,IAAI,GAAG,CAACX,IAAI,CAACE,IAAI,CAACI,CAAC,GAAGN,IAAI,CAACI,EAAE,CAACE,CAAC,IAAI,CAAC;EAC1C,OAAO;IAAEH,CAAC,EAAEO,IAAI;IAAEJ,CAAC,EAAEK;EAAK,CAAC;AAC/B,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAIZ,IAAI,IAAK;EACpC,MAAMC,EAAE,GAAGD,IAAI,CAACI,EAAE,CAACD,CAAC,GAAGH,IAAI,CAACE,IAAI,CAACC,CAAC;EAClC,MAAME,EAAE,GAAGL,IAAI,CAACI,EAAE,CAACE,CAAC,GAAGN,IAAI,CAACE,IAAI,CAACI,CAAC;EAClC,IAAIO,OAAO,GAAG,KAAK;EACnB,IAAIC,KAAK,GAAGP,IAAI,CAACQ,KAAK,CAACV,EAAE,EAAEJ,EAAE,CAAC,IAAI,GAAG,GAAGM,IAAI,CAACS,EAAE,CAAC;EAEhD,IAAIf,EAAE,IAAI,CAAC,IAAII,EAAE,GAAG,CAAC,EAAE,CACvB,CAAC,MAAM,IAAIJ,EAAE,GAAG,CAAC,IAAII,EAAE,GAAG,CAAC,EAAE;IACzBS,KAAK,IAAI,GAAG;IACZD,OAAO,GAAG,IAAI;EAClB,CAAC,MAAM,IAAIZ,EAAE,GAAG,CAAC,IAAII,EAAE,IAAI,CAAC,EAAE;IAC1BS,KAAK,IAAI,GAAG;IACZD,OAAO,GAAG,IAAI;EAClB,CAAC,MAAM,IAAIZ,EAAE,IAAI,CAAC,IAAII,EAAE,IAAI,CAAC,EAAE,CAC/B;EAEA,OAAO;IACHS,KAAK,EAAEA,KAAK;IACZD,OAAO,EAAEA;EACb,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}