{"ast":null,"code":"import { useGraphStates } from './Graphs';\nexport const useGraphUtilities = () => {\n  // Function to calculate edge length\n  const calculateEdgeLength = edge => {\n    const dx = edge.from.x - edge.to.x;\n    const dy = edge.from.y - edge.to.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  // Function to calculate midpoiint of an edge\n  const calculateMidpoint = edge => {\n    const midX = (edge.from.x + edge.to.x) / 2;\n    const midY = (edge.from.y + edge.to.y) / 2;\n    return {\n      x: midX,\n      y: midY\n    };\n  };\n\n  // Fucntion to calculate angle of an edge\n  const calculateAngle = edge => {\n    const dx = edge.to.x - edge.from.x;\n    const dy = edge.to.y - edge.from.y;\n    let flipped = false;\n    let angle = Math.atan2(dy, dx) * (180 / Math.PI);\n    if (dx >= 0 && dy < 0) {} else if (dx < 0 && dy < 0) {\n      angle += 180;\n      flipped = true;\n    } else if (dx < 0 && dy >= 0) {\n      angle -= 180;\n      flipped = true;\n    } else if (dx >= 0 && dy >= 0) {}\n    return {\n      angle: angle,\n      flipped: flipped\n    };\n  };\n\n  // Function to sleep and check for pausing\n  const sleep = duration => {\n    return new Promise(resolve => {\n      const interval = 50;\n      let elapsed = 0;\n      const checkPauseAndSleep = () => {\n        if (isPausedRef.current) {\n          const checkPause = () => {\n            if (isStepModeRef.current) {\n              setIsStepMode(true);\n              resolve();\n            } else if (!isPausedRef.current) {\n              resolve();\n            } else {\n              setTimeout(checkPause, interval);\n            }\n          };\n          checkPause();\n        } else {\n          if (elapsed < duration) {\n            elapsed += interval;\n            setTimeout(checkPauseAndSleep, interval);\n          } else {\n            resolve();\n          }\n        }\n      };\n      checkPauseAndSleep();\n    });\n  };\n};","map":{"version":3,"names":["useGraphStates","useGraphUtilities","calculateEdgeLength","edge","dx","from","x","to","dy","y","Math","sqrt","calculateMidpoint","midX","midY","calculateAngle","flipped","angle","atan2","PI","sleep","duration","Promise","resolve","interval","elapsed","checkPauseAndSleep","isPausedRef","current","checkPause","isStepModeRef","setIsStepMode","setTimeout"],"sources":["/Users/tani/Desktop/visualizer/Visusalizer Project/src/Components/GraphUtilities.js"],"sourcesContent":["import { useGraphStates } from './Graphs';\n\nexport const useGraphUtilities = () => {\n\n    // Function to calculate edge length\n    const calculateEdgeLength = (edge) => {\n        const dx = edge.from.x - edge.to.x;\n        const dy = edge.from.y - edge.to.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    };\n\n    // Function to calculate midpoiint of an edge\n    const calculateMidpoint = (edge) => {\n        const midX = (edge.from.x + edge.to.x) / 2;\n        const midY = (edge.from.y + edge.to.y) / 2;\n        return { x: midX, y: midY };\n    };\n\n    // Fucntion to calculate angle of an edge\n    const calculateAngle = (edge) => {\n        const dx = edge.to.x - edge.from.x;\n        const dy = edge.to.y - edge.from.y;\n        let flipped = false;\n        let angle = Math.atan2(dy, dx) * (180 / Math.PI);\n\n        if (dx >= 0 && dy < 0) {\n        } else if (dx < 0 && dy < 0) {\n            angle += 180;\n            flipped = true;\n        } else if (dx < 0 && dy >= 0) {\n            angle -= 180;\n            flipped = true;\n        } else if (dx >= 0 && dy >= 0) {\n        }\n\n        return {\n            angle: angle,\n            flipped: flipped\n        };\n    };\n\n    // Function to sleep and check for pausing\n    const sleep = (duration) => {\n        return new Promise((resolve) => {\n            const interval = 50;\n            let elapsed = 0;\n\n            const checkPauseAndSleep = () => {\n                if (isPausedRef.current) {\n                    const checkPause = () => {\n                        if(isStepModeRef.current){\n                            setIsStepMode(true);\n                            resolve();\n                        }else if (!isPausedRef.current){\n                            resolve();\n                        }else {\n                            setTimeout(checkPause, interval);\n                        }\n                    };\n                    checkPause();\n                } else {\n                    if (elapsed < duration) {\n                        elapsed += interval;\n                        setTimeout(checkPauseAndSleep, interval);\n                    } else {\n                        resolve();\n                    }\n                }\n            };\n\n            checkPauseAndSleep();\n        });\n    };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}